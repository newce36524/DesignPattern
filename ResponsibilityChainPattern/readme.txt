责任链模式是行为型设计模式的一种，他的应用场景很广泛，主要做的是把一件事拆分成一个个的步骤，或者说把会有很多步骤来
完成一件事的行为进行拆分，拆分到各个具体的类中，让每个类自己去判断是否进入下一个步骤，而不用在上端使用大量if else
来判断执行逻辑，把一整条执行逻辑拆分到各个类中执行，这是一种行为上的解耦，但不可避免的会造成多个类型需要额外维护的
局面，并且在上端需要静态指定各个步骤的连接顺序，但这是可以接受的。
这个例子实现的是判断一个数值出现在哪个范围区间，0-100还是100-200还是200-300还是更大的数值，在各个区间都有一个专门
处理的步骤来解析。

职责连模式和状态模式很像，状态模式可以在内部指明当前状态的下一个状态，职责连模式也可以在内部指明当前职责的下一个职责，
但职责连模式更倾向于可配置，可以根据需求在上端修改职责连的顺序，状态模式要实现需求则必须更改状态内部方法。