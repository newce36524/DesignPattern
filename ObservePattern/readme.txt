观察者模式是行为型设计模式的一种，他关注的是行为的发布和订阅，一处触发，多处响应，在编码过程中，
我们会希望在某个方法执行后能够执行其他地方提前加入定义好的方法，能够在某个方法执行时也能响应这些方法，
这里提供了两种实现方式，实际上原理相同，一个是原始的把委托加入到一个内部委托列表，并在需要执行时，
能够遍历执行委托，第二个是利用C#的event关键字，事件其实是委托的一个实例，通过+= -=订阅和取消订阅，
在发布事件时，内部也是通过内部的委托列表遍历执行，和委托的多播相同，多播是通过Delegate.Combine实现的。
事件只有在定义它的类中才能执行，对内提供安全调用，对外提供注册订阅。

